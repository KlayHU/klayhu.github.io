<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Go语言学习笔记</title>
    <link href="undefined2019/11/20/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>2019/11/20/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Go语言学习笔记"><a href="#Go语言学习笔记" class="headerlink" title="Go语言学习笔记"></a>Go语言学习笔记</h2><h3 id="Day01-："><a href="#Day01-：" class="headerlink" title="##Day01  ："></a>##Day01  ：</h3><h4 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h4><h5 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义:"></a>函数的定义:</h5><p> func xxx(函数名)（携带的参数）函数的返回值{    </p><p>/*      函数体      */</p><p>}</p><p>eg:</p><p><code>func minus(a,b int , op string ) int{}</code></p><p><code>func div(c,d int)(int,int){}</code></p><p><code>func multiply(e,f int)(g,h int){}</code></p><p>:arrow_forward:作为函数式编程的语言，在Go语言中一个函数可以有多个返回值，在声明返回值的<code>return</code>语句中多个返回值中间用<code>,</code>隔开。</p><p>:arrow_forward:如果在定义函数返回值时不想使用某个参数，在参数位上输入<code>_</code>下划线即可</p><p>:black_flag:函数式编程规范：</p><p><code>func apply(func op(int , int) int , a , b int )int{</code></p><p>:arrow_double_up:解析：在apply函数中传入的参数是op这个函数和a,b两个int类型的变量，op函数返回值是int，自带两个int类型参数。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>